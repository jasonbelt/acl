/**
 * generated by Xtext 2.20.0
 */
package org.sireum.aadl.osate.acl.aCL.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.sireum.aadl.osate.acl.aCL.ACLPackage;
import org.sireum.aadl.osate.acl.aCL.HyperperiodComputationalModel;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Hyperperiod Computational Model</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.sireum.aadl.osate.acl.aCL.impl.HyperperiodComputationalModelImpl#getRelationships <em>Relationships</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HyperperiodComputationalModelImpl extends ComputationalModelImpl implements HyperperiodComputationalModel
{
  /**
   * The default value of the '{@link #getRelationships() <em>Relationships</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelationships()
   * @generated
   * @ordered
   */
  protected static final String RELATIONSHIPS_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getRelationships() <em>Relationships</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelationships()
   * @generated
   * @ordered
   */
  protected String relationships = RELATIONSHIPS_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HyperperiodComputationalModelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ACLPackage.Literals.HYPERPERIOD_COMPUTATIONAL_MODEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getRelationships()
  {
    return relationships;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelationships(String newRelationships)
  {
    String oldRelationships = relationships;
    relationships = newRelationships;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ACLPackage.HYPERPERIOD_COMPUTATIONAL_MODEL__RELATIONSHIPS, oldRelationships, relationships));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ACLPackage.HYPERPERIOD_COMPUTATIONAL_MODEL__RELATIONSHIPS:
        return getRelationships();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ACLPackage.HYPERPERIOD_COMPUTATIONAL_MODEL__RELATIONSHIPS:
        setRelationships((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ACLPackage.HYPERPERIOD_COMPUTATIONAL_MODEL__RELATIONSHIPS:
        setRelationships(RELATIONSHIPS_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ACLPackage.HYPERPERIOD_COMPUTATIONAL_MODEL__RELATIONSHIPS:
        return RELATIONSHIPS_EDEFAULT == null ? relationships != null : !RELATIONSHIPS_EDEFAULT.equals(relationships);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (relationships: ");
    result.append(relationships);
    result.append(')');
    return result.toString();
  }

} //HyperperiodComputationalModelImpl
